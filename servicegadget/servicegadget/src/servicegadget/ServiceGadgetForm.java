/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package servicegadget;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
/**
 *
 * @author Mikel
 */
public class ServiceGadgetForm extends javax.swing.JFrame {
    private Connection con;
    
    public ServiceGadgetForm() {
        initComponents();
        connectDatabase();
        initTable(); // Pastikan tabel diinisialisasi
        loadTable();
        // Tambahkan listener mouse setelah tabel diinisialisasi
        tblData.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
    }
    private void connectDatabase() {
        try {
            String url = "jdbc:mysql://localhost:3306/servicegadget"; // Ganti nama_database sesuai dengan nama database Anda
            String user = "root"; // Username database
            String password = ""; // Password database
            con = DriverManager.getConnection(url, user, password);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal terhubung ke database: " + e.getMessage());
        }
    }
    
     private void initTable() {
        DefaultTableModel model = new DefaultTableModel(
            new Object[]{"ID", "Merk Gadget", "Customer", "Deskripsi Masalah", "Status Perbaikan"},
            0
        );
        tblData.setModel(model);
    }
    private void loadTable() {
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0);

        try {
            String sql = "SELECT * FROM gadget_service";
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("merk_gadget"),
                    rs.getString("customer"),
                    rs.getString("deskripsi_masalah"),
                    rs.getString("status_perbaikan")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data: " + e.getMessage());
        }

    }
     
     // Pastikan model JTable sesuai dengan kolom di database
     

     private void clearFields() {
        txtMerkGadget.setText("");
        txtCustomer.setText("");
        txtDeskripsiMasalah.setText("");
        txtStatusPerbaikan.setText("");
    }
     
     private void tblDataMouseClicked(MouseEvent evt) {
        int selectedRow = tblData.getSelectedRow();
        if (selectedRow != -1) {
            txtMerkGadget.setText(tblData.getValueAt(selectedRow, 1).toString());
            txtCustomer.setText(tblData.getValueAt(selectedRow, 2).toString());
            txtDeskripsiMasalah.setText(tblData.getValueAt(selectedRow, 3).toString());
            txtStatusPerbaikan.setText(tblData.getValueAt(selectedRow, 4).toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDeskripsiMasalah = new javax.swing.JTextField();
        txtCustomer = new javax.swing.JTextField();
        txtMerkGadget = new javax.swing.JTextField();
        txtStatusPerbaikan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("SERVICE GADGET");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Costumer");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Deskripsi Masalah");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Status Perbaikan");

        txtDeskripsiMasalah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeskripsiMasalahActionPerformed(evt);
            }
        });

        txtMerkGadget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMerkGadgetActionPerformed(evt);
            }
        });

        txtStatusPerbaikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusPerbaikanActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Merk Gadget");

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Merk Gadget", "Costomer", "Deskripsi Masalah", "Status Perbaikan"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setText("Uptude");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCreate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCreate)
                                .addGap(26, 26, 26)
                                .addComponent(btnUpdate)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtMerkGadget)
                                .addComponent(txtCustomer)
                                .addComponent(txtDeskripsiMasalah)
                                .addComponent(txtStatusPerbaikan, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear)))
                        .addGap(170, 170, 170)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMerkGadget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDeskripsiMasalah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStatusPerbaikan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreate)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnClear))
                        .addGap(0, 219, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(59, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtStatusPerbaikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusPerbaikanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStatusPerbaikanActionPerformed
   
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
     int selectedRow = tblData.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan di delete!");
        return;
    }

    int id = (int) tblData.getValueAt(selectedRow, 0); // Ambil ID dari kolom pertama
//    String merkGadget = txtMerkGadget.getText();
//    String customer = txtCustomer.getText();
//    String deskripsi = txtDeskripsiMasalah.getText();
//    String status = txtStatusPerbaikan.getText();

    try {
        String sql = "DELETE FROM gadget_service WHERE id = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setInt(1, id);
        pst.execute();

        JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
        loadTable();
        clearFields();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal memperbarui data: " + e.getMessage());
    }            // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtMerkGadgetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMerkGadgetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMerkGadgetActionPerformed

    
    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
    String merkGadget = txtMerkGadget.getText();
        String customer = txtCustomer.getText();
        String deskripsi = txtDeskripsiMasalah.getText();
        String status = txtStatusPerbaikan.getText();

        try {
            String sql = "INSERT INTO gadget_service (merk_gadget, customer, deskripsi_masalah, status_perbaikan) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, merkGadget);
            pst.setString(2, customer);
            pst.setString(3, deskripsi);
            pst.setString(4, status);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
            loadTable();
            clearFields();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data: " + e.getMessage());
        }    // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed
    
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

    // Ambil baris yang dipilih
    int selectedRow = tblData.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan diupdate!");
            return;
        }

        int id = (int) tblData.getValueAt(selectedRow, 0);
        String merkGadget = txtMerkGadget.getText();
        String customer = txtCustomer.getText();
        String deskripsi = txtDeskripsiMasalah.getText();
        String status = txtStatusPerbaikan.getText();

        try {
            String sql = "UPDATE gadget_service SET merk_gadget = ?, customer = ?, deskripsi_masalah = ?, status_perbaikan = ? WHERE id = ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, merkGadget);
            pst.setString(2, customer);
            pst.setString(3, deskripsi);
            pst.setString(4, status);
            pst.setInt(5, id);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data berhasil diperbarui");
            loadTable();
            clearFields();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui data: " + e.getMessage());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
     clearFields();      // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed
   
    private void txtDeskripsiMasalahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeskripsiMasalahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeskripsiMasalahActionPerformed
    
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new ServiceGadgetForm().setVisible(true));
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtCustomer;
    private javax.swing.JTextField txtDeskripsiMasalah;
    private javax.swing.JTextField txtMerkGadget;
    private javax.swing.JTextField txtStatusPerbaikan;
    // End of variables declaration//GEN-END:variables
}

